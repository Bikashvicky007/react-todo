{"version":3,"sources":["Todos.js","App.js","reportWebVitals.js","index.js"],"names":["Todos","props","className","List","ListItem","ListItemText","primary","text","App","useState","input","setinput","todos","setTodos","FormControl","InputLabel","htmlFor","Input","aria-describedby","value","onChange","event","target","name","Button","disabled","onClick","preventDefault","variant","color","type","map","todo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAiBeA,MAZf,SAAeC,GACb,OACE,qBAAKC,UAAU,YAAf,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAcC,QAASL,EAAMM,c,gCC0CxBC,MA9Cf,WAAgB,IAAD,EACaC,qBADb,mBACNC,EADM,KACCC,EADD,OAEaF,mBAAS,IAFtB,mBAENG,EAFM,KAECC,EAFD,KAcb,OACE,sBAAKX,UAAU,MAAf,UACE,iDACA,iCACE,eAACY,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,WAApB,yBACA,cAACC,EAAA,EAAD,CACEC,mBAAiB,iBACjBC,MAAOT,EACPU,SAnBO,SAACC,GAChBV,EAASU,EAAMC,OAAOH,QAmBdI,KAAK,gBAIT,cAACC,EAAA,EAAD,CACEC,UAAWf,EACXgB,QAtBQ,SAACL,GACfA,EAAMM,iBACNd,EAAS,GAAD,mBAAKD,GAAL,CAAYF,KACpBC,EAAS,KAoBHiB,QAAQ,YACRC,MAAM,UACNC,KAAK,SALP,0BAWDlB,EAAMmB,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,CAAOzB,KAAMyB,WClCNC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2624dedc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nfunction Todos(props) {\r\n  return (\r\n    <div className=\"todo_list\">\r\n      <List>\r\n        <ListItem>\r\n          <ListItemText primary={props.text} />\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todos;\r\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Todos from \"./Todos\";\nimport \"./App.css\";\nimport { FormControl, InputLabel, Input } from \"@material-ui/core\";\n\nfunction App() {\n  const [input, setinput] = useState();\n  const [todos, setTodos] = useState([]);\n\n  const addInput = (event) => {\n    setinput(event.target.value);\n  };\n\n  const addTodo = (event) => {\n    event.preventDefault(); //this will prevent default behaviour\n    setTodos([...todos, input]);\n    setinput(\"\");\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>TODO List (-_-)</h1>\n      <form>\n        <FormControl>\n          <InputLabel htmlFor=\"my-input\">Write Todos</InputLabel>\n          <Input\n            aria-describedby=\"my-helper-text\"\n            value={input}\n            onChange={addInput}\n            name=\"todoList\"\n          />\n        </FormControl>\n\n        <Button\n          disabled={!input}\n          onClick={addTodo}\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n        >\n          ADD TODOS\n        </Button>\n      </form>\n\n      {todos.map((todo) => (\n        <Todos text={todo} />\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}